#include "vca_proportional.h"#include <stdexcept>#include <iostream>#include <math.h>using namespace std;namespace fmsmoov {VCAProportional::VCAProportional(uint32_t _samprate, uint32_t _n_samps) : VCA(_samprate, _n_samps){    }VCAProportional::VCAProportional(const VCAProportional& rhs) : VCA(rhs.samprate, rhs.n_samps) {    }VCAProportional::~VCAProportional(){}void VCAProportional::process(float* in, float* control, float* out, uint32_t n_samps){    float c = 0.0f;        for(uint32_t i = 0; i < n_samps; i++) {        if(control[i] < 0.0) {            c = 0.0f;        }        if(control[i] > 1.0) {            c = 1.0f;        }    }}}