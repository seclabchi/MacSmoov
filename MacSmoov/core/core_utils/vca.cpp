#include "vca.h"#include <stdexcept>#include <iostream>#include <math.h>#define EPS 0.000000001using namespace std;namespace fmsmoov {VCA::VCA(uint32_t _samprate, uint32_t _n_samps) : samprate(_samprate), n_samps(_n_samps){    tmp_buf = new float[n_samps]();}VCA::~VCA(){    delete[] tmp_buf;}void VCA::config(VCA_TYPE _type) {    type = _type;}void VCA::process(float* input, float* control, float* output){    float c = 0.0f;        for(uint32_t i = 0; i < n_samps; i++) {        if(control[i] < 0.0) {            c = 0.0f;        }        if(control[i] > 1.0) {            c = 1.0f;        }                if(type == VCA_TYPE::LINEAR) {            output[i] = input[i] * control[i];        }        else {            tmp_buf[i] = 20.0f*log10f(fabs(input[i]) + EPS);        }    }}}