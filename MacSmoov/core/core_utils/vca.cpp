#include "vca.h"#include <stdexcept>#include <iostream>#include <math.h>using namespace std;namespace fmsmoov {VCA::VCA(uint32_t _samprate, uint32_t _n_samps) : samprate(_samprate), n_samps(_n_samps){    }VCA::VCA(const VCA& rhs)  {    samprate = rhs.samprate;    n_samps = rhs.n_samps;}VCA::~VCA(){}void VCA::process(float* in, float* control, float* out, uint32_t n_samps){    float c = 0.0f;        for(uint32_t i = 0; i < n_samps; i++) {        if(control[i] < 0.0) {            c = 0.0f;        }        if(control[i] > 1.0) {            c = 1.0f;        }    }}}