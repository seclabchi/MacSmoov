#ifndef __RUNNING_RMS_H__#define __RUNNING_RMS_H__#include "biquad.h"class RunningRMS{  public:    RunningRMS(float _window_time, uint32_t _samprate, uint32_t _nsamps, float _tAtt, float _tRel);    virtual ~RunningRMS();    virtual void process(float* in, float* out);  private:    RunningRMS();    uint32_t m_samprate;    float* m_window;    float m_window_time;    uint32_t m_window_size;    uint32_t m_window_pos;    float m_sum_of_squares;    uint32_t m_nsamps;    float m_tAtt, m_tRel;    float m_alphaA, m_alphaR;    float m_lc, m_lsprev, m_ls;};#endif  //#ifndef __RUNNING_RMS_H__