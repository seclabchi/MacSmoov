#pragma once#include <vector>#include <cstdint>#include "butterworth.h"namespace tonekids {namespace dsp {class AllpassFilterLR4 {    public:        AllpassFilterLR4(double _fs, double _fc, uint32_t _n_samp);        bool retune(double _fc);        void process(float* in, float* out);        ~AllpassFilterLR4();    private:        double fs, fc;        uint32_t n_samp;        float* tmp_bufL;        float* tmp_bufH;        float* tmp_bufoutL;        float* tmp_bufoutH;        AllpassFilterLR4();        tonekids::dsp::Butterworth* bwL;        tonekids::dsp::Butterworth* bwH;        std::vector<Biquad> bqv1L;        std::vector<Biquad> bqv2L;        std::vector<Biquad> bqv1H;        std::vector<Biquad> bqv2H;        double bqv1L_gain, bqv2L_gain;        double bqv1H_gain, bqv2H_gain;};} /* dsp */} /* tonekids */